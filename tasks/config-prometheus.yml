---
- name: "Set promtool flags based on version"
  block:
    - set_fact:
        promtool_check_config_cmd: 'promtool check-config'
    - set_fact:
        promtool_check_rules_cmd: 'promtool check-rules'
  when: prometheus_version |  version_compare('1.8.1', operator='<=')

- block:
    - set_fact:
        promtool_check_config_cmd: 'promtool check config'
    - set_fact:
        promtool_check_rules_cmd: 'promtool check rules'
  when: prometheus_version |  version_compare('1.8.1', operator='>')

- debug:
    var: promtool_check_config_cmd

- name: "crate additional directories"
  file:
    path: "{{ dirname }}"
    state: directory
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    mode: 0755
  with_items:
    - "{{ prometheus_file_sd_config_path }}"
    - "{{ prometheus_rules_dir }}"
    - "{{ prometheus_alertmanager_templates_path }}"
  loop_control:
    loop_var: dirname

- name: "set prometheus service"
  template:
    src: prometheus.service.j2
    dest: "{{ prometheus_systemd_dir }}/prometheus.service"
  notify:
    - reload prometheus
  when: ansible_virtualization_type != 'docker'

- name: "Setup recording rules"
  template:
    src: record.rules.j2
    dest: "{{ prometheus_rules_dir }}/{{ item.name }}.rules"
    validate: "{{ promtool_check_rules_cmd }} %s"
  with_items:
    - "{{ prometheus_recording_rules }}"

- name: "Create sd_files"
  include: sd-create.yml
  vars:
    args: "{{ sd }}"
  with_items: '{{ prometheus_static_targets }}'
  loop_control:
    loop_var: sd
  when: prometheus_static_targets is defined

- name: "set prometheus config yml"
  template:
    src: prometheus.yml.j2
    dest: "{{ prometheus_opt_config_file }}"
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    validate: "{{ promtool_check_config_cmd }} %s"
...
