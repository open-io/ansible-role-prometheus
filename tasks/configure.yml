---
- name: "Create additional directories"
  file:
    path: "{{ dirname }}"
    state: directory
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    mode: 0755
  with_items:
    - "{{ prometheus_rules_dir }}"
    - "{{ prometheus_alert_dir }}"
    - "{{ prometheus_targets_dir }}"
  loop_control:
    loop_var: dirname

# - name: "Set prometheus service"
#   template:
#     src: prometheus.service.j2
#     dest: "{{ prometheus_systemd_dir }}/prometheus.service"
#   notify:
#     - reload prometheus
#   when: ansible_virtualization_type != 'docker'

- name: "Setup recording rules"
  template:
    src: record.rules.j2
    dest: "{{ prometheus_rules_dir }}/{{ item.name }}.rules"
    validate: "{{ promtool_check_rules_cmd }} %s"
  with_items:
    - "{{ prometheus_recording_rules }}"

- name: "Setup alerting rules"
  template:
    src: alert.rules.j2
    dest: "{{ prometheus_alert_dir }}/default.rules"
    validate: "{{ promtool_check_rules_cmd }} %s"

- name: "Setup prometheus config yml"
  template:
    src: prometheus.yml.j2
    dest: "{{ prometheus_conf_dir }}/prometheus.yml"
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    validate: "{{ promtool_check_config_cmd }} %s"

- name: "Create prometheus run options"
  set_fact:
    prometheus_run_opts:
      config.file: "{{ prometheus_conf_dir}}/prometheus.yml"
      storage.tsdb.path: "{{ prometheus_storage_path }}"
      storage.tsdb.retention: "{{ prometheus_storage_retention }}"
      web.enable-lifecycle: ""
      web.listen-address: "{{ prometheus_listen_ip }}:{{ prometheus_listen_port }}"
      web.external-url: "http://{{ prometheus_listen_ip }}:{{ prometheus_listen_port }}"
      log.level: "{{ prometheus_loglevel }}"

- name: Save Prometheus run options
  template:
    src: prometheus_opts.j2
    dest: "/etc/default/prometheus"
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
...
