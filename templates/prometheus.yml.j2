global:
  scrape_interval:     15s
  evaluation_interval: 15s
  external_labels:
    monitor: 'master'

{% if prometheus_recording_rules | length > 0 %}
rule_files:
  {% for rule_file in prometheus_recording_rules %}
  - "{{ prometheus_rules_dir }}/{{ rule_file.name }}.rules"
  {% endfor %}
  - "{{ prometheus_alert_dir }}/default.rules"
{% endif %}

scrape_configs:
- job_name: 'prometheus'
  scrape_interval: 10s
  scrape_timeout:  10s
  static_configs:
    - targets: ['localhost:9090']

{% if prometheus_netdata_enabled %}
- job_name: netdata
  scrape_interval: {{ prometheus_netdata_interval }}
  metrics_path: "/api/v1/allmetrics"
  params:
    format: 'prometheus_all_hosts'
  honor_labels: true
  file_sd_configs:
    files: "{{ prometheus_targets_dir }}/netdata.yml"
  metric_relabel_configs:
    - source_labels: [chart, dimension]
      regex: openio.score;.*\.(.*?)\_.*
      replacement: ${1}
      target_label: service
    - source_labels: [chart, dimension]
      regex: openio.score;.*\.(.*?)\_(.*)
      replacement: ${2}
      target_label: s_instance
    - source_labels: [chart, dimension]
      regex: openio.*[byte_avail|byte_used].*;.*\.(.*?)\..*
      replacement: ${1}
      target_label: s_instance
    - source_labels: [chart, dimension]
      regex: openio.rep_hits.*;.*\.(.*)
      replacement: ${1}
      target_label: s_instance
{% endif %}

{% if prometheus_blackbox_enabled %}
- job_name: 'blackbox'
  scrape_interval: {{ prometheus_blackbox_interval }}
  metrics_path: /probe
  file_sd_configs:
    - files:
        - '{{ prometheus_targets_dir }}/blackbox.yml'
  relabel_configs:
    # Module replacements
    - source_labels: [module]
      target_label: __param_module
    # Job replacements
    - source_labels: [module]
      target_label: job

    # Service type strip
    - source_labels: [module, __address__]
      regex: ^[tcpcheck].*;(.*?),.*\=\>.*
      replacement: ${1}
      target_label: service
    - source_labels: [module, __address__]
      regex: ^[tcpcheck].*;(.*?),(.*)
      replacement: ${2}
      target_label: __address__

    # Host strip
    - source_labels: [__address__]
      regex: (.*?),.*
      replacement: ${1}
      target_label: host
    - source_labels: [__address__]
      regex: .*?,(.*)
      replacement: ${1}
      target_label: __address__

    # Target replacements
    - source_labels: [module, __address__]
      regex: ^[icmpcheck|tcpcheck|zookeeper|beanstalkd|redis|oioproxy].*;(.*)\=\>(.*)
      replacement: ${2}
      target_label: __param_target

    - source_labels: [module, __address__]
      regex: ^account;(.*)\=\>(.*)
      replacement: http://${2}/status
      target_label: __param_target

    - source_labels: [module, __address__]
      regex: ^rdir;(.*)\=\>(.*)
      replacement: http://${2}/status
      target_label: __param_target

    - source_labels: [module, __address__]
      regex: ^oioproxy;(.*)\=\>(.*)
      replacement: http://${2}/v3.0/status
      target_label: __param_target

    - source_labels: [module, __address__]
      regex: ^[meta0|meta1|meta2|conscience].*;(.*)=>(.*),(.*)
      replacement: http://${2}/v3.0/forward/stats?id=${3}
      target_label: __param_target

    - source_labels: [module, __address__]
      regex: ^rawx;(.*)=>(.*)
      replacement: http://${2}/info
      target_label: __param_target

    # Address replacements
    - source_labels: [__address__]
      regex: (.*)\=\>(.*)
      replacement: ${1}:{{prometheus_blackbox_port}}
      target_label: __address__

    # Instance replacements
    - source_labels: [__param_target]
      target_label: instance
    - source_labels: [module, __param_target]
      regex: ^[tcpcheck|zookeeper|redis|redissentinel|beanstalkd].*;(.*?)\.(.*?)\.(.*?)\.(.*?)\:(.*)
      replacement: ${1}_${2}_${3}_${4}_${5}
      target_label: instance
    - source_labels: [module, __param_target]
      regex: ^[account|oioproxy|rawx|rdir].*;.*://(.*?)\.(.*?)\.(.*?)\.(.*?)\:(.*?)/.*
      replacement: ${1}_${2}_${3}_${4}_${5}
      target_label: instance
    - source_labels: [module, __param_target]
      regex: ^[meta0|meta1|meta2|conscience].*;(.*)?id=(.*?)\.(.*?)\.(.*?)\.(.*?)\:(.*)
      replacement: ${2}_${3}_${4}_${5}_${6}
      target_label: instance
{% endif %}

{% if prometheus_alertmanager_enabled %}
alerting:
  alertmanagers:
  - static_configs:
    - targets:
      - {{ prometheus_alertmanager_host }}:{{ prometheus_alertmanager_port }}
{% endif %}
